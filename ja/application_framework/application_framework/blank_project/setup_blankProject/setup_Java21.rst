.. _setup_blank_project_for_Java21:

----------------------------------------------------------
Java21で使用する場合のセットアップ方法
----------------------------------------------------------

ブランクプロジェクトをJava21で使用する場合、各ブランクプロジェクトの疎通確認前に以下の手順を行う。

* Java17で使用する場合と同様のセットアップ

 - 依存モジュールの追加
 - gsp-dba-maven-pluginがJava21で動くように設定する
 - 自動テストで使用するJettyのモジュール変更(ウェブプロジェクト または RESTfulウェブサービスプロジェクトの場合のみ)
 - --add-opensオプションの追加（JSR352に準拠したバッチプロジェクトの場合のみ）

* カバレッジ取得で使用するJacocoのバージョンアップ
* 標準エンコーディングの変更（Windowsの場合）
* Javaバージョンの変更

Java17で使用する場合と同様のセットアップ
-------------------------------------------------------------

以下の手順はJava17を使用する場合と同じなので、:ref:`setup_blank_project_for_Java17` を参照する。

* 依存モジュールの追加
* gsp-dba-maven-pluginがJava17で動くように設定する
* 自動テストで使用するJettyのモジュール変更(ウェブプロジェクト または RESTfulウェブサービスプロジェクトの場合のみ)
* --add-opensオプションの追加（JSR352に準拠したバッチプロジェクトの場合のみ）

カバレッジ取得で使用するJacocoのバージョンアップ
-------------------------------------------------------------

ブランクプロジェクトのデフォルトで設定されているJacocoのバージョンはJava21に対応していない。
そのため以下のようにファイルに追加する。

* pom.xml

.. code-block:: xml

  <properties>
    <!-- 中略 -->
    <!-- 以下を追加する。 -->
    <version.plugins.jacoco>0.8.11</version.plugins.jacoco>
  </properties>


標準エンコーディングの変更（Windowsの場合）
-------------------------------------------------------------

Java18で標準エンコーディングがUTF-8に変更になった。
Windowsは標準エンコーディングがShift-JISなので、文字セットを指定していない場合は文字化けを起こす。
このため、以下のようにJavaコマンドの実行時オプションとしてシステムプロパティを指定することで、Java17までと同様の動作となり文字化けを回避できる。

* ``-Dfile.encoding=COMPAT``

.. tip::
  環境変数で指定する場合は、環境変数 ``_JAVA_OPTIONS`` を使うことでオプションを設定できる。ただしログに ``Picked up _JAVA_OPTIONS: -Dfile.encoding=COMPAT`` が表示される。

.. important::
   Java17までは ``-Dfile.encoding=COMPAT`` というオプションは有効ではないので、従来の実行環境にこのオプションが適用されないように注意すること。

Javaバージョンの変更
-----------------------------

ブランクプロジェクトではソース及びclassファイルが準拠するJavaのバージョンとしてJava8が設定されているため
以下のようにファイルを変更する。

* pom.xml

.. code-block:: xml

    <!-- Javaバージョンの箇所を以下のように変更する-->
    <java.version>21</java.version>

