---------------------------------------------------------------------------------
Initial Setup of RESTful Web Service Project for Container
---------------------------------------------------------------------------------

The following is procedures of initial setup of the RESTful web service project for container:

* Generating RESTful web service project for container
* Confirm communications of RESTful web service project
* Create a container image
* Run Container Image


Preliminary preparations
-------------------------------------------------------------

Install one of the following for use with :ref:`firstStepContainerWebServiceStartupTest`.

* Firefox
* Chrome


Overview of the generated project
----------------------------------------------------------

The overview of the project generated by this procedure is as follows.

.. list-table::
  :header-rows: 1
  :class: white-space-normal
  :widths: 8,20

  * - Item
    - Description
  * - Project Type
    - Maven project
  * - Project composition
    - Single project composition
  * - DB used
    - H2 Database Engine (embedded in the application)
  * - Built-in adapter
    - * Adapter for Jersey(for details, see :ref:`jaxrs_adaptor`)
      * Routing adapter (for details, see :ref:`router_adaptor`)
  * - What is included in the generated project?
    - The following is included in the generated project:
       
      * Basic configuration for the Nablarch RESTful web service application
      * RESTful web service for communication confirmation
      * Initial configuration of the tool that operates in conjunction with Maven (is imported by referring to :ref:`about_maven_parent_module`).


For relationship with other projects and directories, see :doc:`../MavenModuleStructures/index`.



.. _firstStepGenerateContainerJaxrsBlankProject:

Create blank project
----------------------------------------------------------

Generate a blank project using the archetypes provided by Nablarch.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Execute the mvn command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use `Maven Archetype Plugin(external site) <https://maven.apache.org/archetype/maven-archetype-plugin/usage.html>`_ to generate a blank project.

Change the current directory to the directory where the blank project (can be any directory) is to be created.

Execute the following command.

.. code-block:: bat

  mvn archetype:generate -DarchetypeGroupId=com.nablarch.archetype -DarchetypeArtifactId=nablarch-container-jaxrs-archetype -DarchetypeVersion={nablarch_version}

The version of Nablarch used in the above command is |nablarch_version|. If you want to change the version, change the following parameters.

.. list-table::
  :header-rows: 1
  :class: white-space-normal
  :widths: 6,20

  * - Set value
    - Description
  * - archetypeVersion
    - Specify the version of the archetype you wish to use. (Nablarch 6u2 or later must be specified)

Enter project information
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When the above command is executed, you will be asked to enter the following information about the blank project to be generated.

=========== ================================================= =========================
Input item  Description                                       Configuration example
=========== ================================================= =========================
groupId      Group ID (normally, enter the package name)      ``com.example``
artifactId   Artifact ID                                      ``myapp-container-jaxrs``
version      Version number                                   ``0.1.0``
package      Package (normally the same as group ID)          ``com.example``
=========== ================================================= =========================

.. important::
   Item groupId and package are mapped to the Java package name.
   Use lowercase letters, numbers, and dots for these input values, and do not use hyphens.

When you have finished entering project information, Y: : will appear.

 * Enter 「Y」 if you want to generate a template based on the information you have entered.
 * Enter 「N」 if you wish to redo the project information entry.

If the command ends normally, a blank project is created under the current directory.


.. _firstStepContainerWebServiceStartupTest:

Communication confirmation
-------------------------------------------

The communication confirmation mechanism and procedures are the same as for a normal RESTful web service project. Thus, see :ref:`Initial Setup of RESTful Web Service Project <firstStepWebServiceStartupTest>`.

.. note::

  Artifact ID should be replace with ``myapp-container-jaxrs`` to specify the directory or command.

.. _firstStepBuildContainerWebServiceDockerImage:

Create a container image
----------------------------------

The way to create a container image is the same as in a web project for containers, so see :ref:`Initial Setup of Web Project for Container <firstStepBuildContainerWebDockerImage>`.

.. note::

  Artifact ID should be replace with ``myapp-container-jaxrs`` to specify the directory or command.


.. _firstStepRunContainerWebServiceDockerImage:

Run a container image
----------------------------------

The way to run the container image is the same as in a web project for containers, so see :ref:`Initial Setup of Web Project for Container <firstStepRunContainerWebDockerImage>`.

.. note::

  Artifact ID should be replace with ``myapp-container-jaxrs`` to specify the directory or command.

.. note::

  The operation can be checked at the following URL.

  * ``http://localhost:8080/find/json``
  * ``http://localhost:8080/find/xml``


Configure the database
----------------------------------------

The blank project is initially configured to use the H2 Database Engine. To change the RDBMS to be used, refer to :ref:`customize-db` for the configuration.

In addition, to generate and execute DDL from ER diagrams and automatically generate entity classes, you need to initialize and run gsp-dba-maven-plugin. For details, see :ref:`gsp-maven-plugin`.


Supplementary notes
--------------------

For information on the method of confirming the data of H2 and tools included in the blank project, see :doc:`../firstStep_appendix/firststep_complement`.
