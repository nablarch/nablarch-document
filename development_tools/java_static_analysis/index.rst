
=========================
効率的なJava静的チェック
=========================

.. contents:: 目次
  :depth: 1
  :local:

--------
概要
--------

コードの品質と保守性を高めるための観点として下記の３つが挙げられる。

* Javaコーディングの慣例に沿っていること
* コードフォーマットが統一されていること
* 許可したAPIのみが使用されていること

本ページでは、これらを効率的にチェックするための方法について説明する。

.. _java-static-analysis:

--------------------------
構文チェックとフォーマット
--------------------------

冒頭で述べた「Javaコーディングの慣例に沿っていること」及び「コードフォーマットが統一されていること」をチェックするために、
NablarchではJetBrains社製のIDEである `IntelliJ IDEA(外部サイト) <https://www.jetbrains.com/idea/>`_ の使用を推奨している。
IntelliJ IDEAの静的検査機能とフォーマット機能を用いることで、問題のある箇所を簡単にチェックすることができる。
なお、これらの機能はPJで必要に応じてカスタマイズすることができる。

.. list-table::
  :header-rows: 1
  :class: white-space-normal
  :widths: 1,2

  * - 機能
    - 概要
  * - 静的検査機能
    - Javaコーディングの慣例に沿っているか、潜在的なバグが含まれていないかなどをチェックし、リアルタイムに警告する機能。IntelliJ IDEAではインスペクションと呼ぶ。
  * - フォーマット機能
    - ソースコードに適切なインデントを施す機能。コミット時に自動でフォーマットをかけるなどの設定も行える。
    
.. tip::

   Nablarchで提供している上記機能の設定ファイルついて。
   
   * 静的検査機能
       Nablarch開発で使用した静的検査機能の設定ファイルを提供している。Nablarchアーキタイプから生成した :ref:`blank_project` に設定が適用されている。

   * フォーマット機能
       特になし。IntelliJ IDEAのデフォルトの設定を使用する。
   
.. tip::
   静的検査機能をCI(Jenkins)で実行することができる。設定方法は、 `こちら(外部サイト) <http://siosio.hatenablog.com/entry/2016/12/23/212140>`_ を参照。

.. _nab-intellij-plugin:

-----------------------------------------------
許可したAPIのみ使用されていることをチェックする
-----------------------------------------------

このチェックを行うためには、nablarch-intellij-pluginを用いるのが簡単である。
nablarch-intellij-pluginはNablarch開発を支援するためのIntelliJ IDEA用のプラグインであり、
Nablarch非公開APIとブラックリストに登録したJava APIが使用されていないかをチェックできる。
これにより冒頭で述べた「許可したAPIのみが使用されていること」が保証できる。

プラグインの詳細は、 `nablarch-intellij-plugin <https://github.com/nablarch/nablarch-intellij-plugin>`_ を参照。

