
======================
Java静的チェックツール
======================

.. contents:: 目次
  :depth: 1
  :local:

-----
概要
-----

コード品質を高める手段の一つとして、開発者のコーディング記法を統一することがあげられる。
そのためには、詳細なコーディング規約が必要であるが、開発者がそれら全てを理解して実装を行うことは困難である。
Nablarchでは、開発者が容易にコーディング規約を順守できるようにするためのJava静的チェックツールを提供している。
本ツールはJetBrains社製のIDEである `IntelliJ IDEA <https://www.jetbrains.com/idea/>`_ のプラグインであるため、
ツールを使用するにあたってIntelliJ IDEAのインストールが必要である。
IntelliJ IDEAが標準で搭載している開発支援機能と、本ツールを組み合わせることで、次の点を保証できる。

* 使用するAPIを限定できるため、安全性が向上する。
* 規約に沿ったコーディングであるかをチェックできるため、信頼性が向上する。
* Javaコーディングにおけるベストプラクティスに沿っているかチェックできるため、保守性・可読性が向上する。

--------
動作環境
--------

本ツールは下記の環境で動作する。

* IntelliJ IDEA Community Edition
* IntelliJ IDEA Ultimate Edition

---------------------------
IntelliJ IDEAの開発支援機能
---------------------------

IntelliJ IDEAに標準で搭載されている開発支援機能は下記の通りである。
いずれの機能もPJでカスタマイズすることができる。カスタマイズ方法は :ref:`intellij-configration` を参照。

.. list-table::
  :header-rows: 1
  :class: white-space-normal
  :widths: 1,2

  * - 機能
    - 概要
  * - フォーマット機能
    - ソースコードを整形する機能。IntelliJ IDEAのデフォルト設定を使用する。
  * - インスペクション機能
    - ソースコードの構文が正しいか、潜在的なバグが含まれていないかなどをチェックし警告する機能。Nablarch開発で使用したものをサンプルとして提供している。

----------------------------
Java静的チェックツールの機能
----------------------------

本ツールが備えている機能は下記の通りである。

.. list-table::
  :header-rows: 1
  :class: white-space-normal
  :widths: 1,2

  * - 機能
    - 概要
  * - Nablarch公開APIチェック機能
    - Nablarchが公開しているAPI以外を使用している箇所を警告する機能。
  * - JavaAPIブラックリスト機能
    - ブラックリストとして定義したJavaのAPIを使用している箇所を警告する機能。
    
---------
導入方法
---------

本ツールはNablarchのアーキタイプに含めて提供しているため、 :ref:`blank_project` を生成した後、
IntelliJ IDEAに下記設定を行うことで使用することができる。

* フォーマット及びインスペクションの設定ファイルをIntelliJ IDEAにインポートする。

* IntelliJ IDEAにJava静的チェックツール(プラグイン)をインストールする。

-------
拡張例
-------

.. _intellij-configration:

IntelliJ IDEAの開発支援機能をカスタマイズする
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* フォーマット機能のカスタマイズ
  
  * タブ：``[File]→[Settings]→[Code Style]→[Java]``


* インスペクション機能のカスタマイズ
  
  * タブ：``[File]→[Settings]→[Inspections]``
  
.. tip::
   
   設定はxmlファイルとしてインポート/エクスポートすることができるため、PJ内で共有することができる。

インスペクション機能をCIで実行する
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CIでビルドを行った際にインスペクション機能を合わせて実行することができる。
Jenkinsでの設定方法は下記サイトを参照。

* `JenkinsでIntelliJ IDEAのinspectionを実行して結果をいい感じに表示させてみる(外部サイト) <http://siosio.hatenablog.com/entry/2016/12/23/212140>`_
